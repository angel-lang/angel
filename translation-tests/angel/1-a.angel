// Constant declarations.
let constantWithEverything: I8 = 1
let constantWithoutType = 1
let constantWithoutValue: I8

// Variable declarations.
var variableWithEverything: I8 = 1
var variableWithoutType = 1
var variableWithoutValue: I8

// Assignments.
constantWithoutValue = 1    // Constant didn't have value. Assignment is allowed.
variableWithEverything = 2
variableWithoutType = 2
variableWithoutValue = 2
variableWithoutValue = 3

// Char
let charWithEverything: Char = 'a'
let charWithoutType = 'b'

// F32
let f32WithEverything: F32 = 10.20
let f32WithoutType = 120.1

// F64
let f64WithEverything: F64 = 10.20
let f64WithoutType = 340282370000000000808640304032688192896.1

// Vector type
let emptyVectorWithoutType = []
let emptyVectorWithType: [I8] = []
let vectorWithoutType = [1, 260]
let vectorWithType: [I8] = [1]

// Dict type
let emptyDictWithoutType = [:]
let emptyDictWithType: [String: I8] = [:]
let dictWithoutType = ["a": 1, "c": 0, "b": 3]
let dictWithType: [String: I8] = ["a": 1]

// Optional type
let someOptional = Optional.None
let optionalName: String? = Optional.Some("John")
if optionalName == Optional.None:
    print("No")
else:
    print("YES")

// If let
if let realName = optionalName:
    print(realName)
else:
    print("No name")

// While let
fun getN(i: I8) -> I8?:
    if i <= 3:
        return Optional.Some(i)
    return Optional.None

var lol = 0
while let n = getN(lol):
    print(n)
    lol += 1

// String.split
let names = "John,Mike,Kale"
let parts = names.split(',')

let name = "Mike"

// String.length
let length = name.length

var age: I8 = 20
age = 21

print(name)
print(age)

if True:
    print(True)
elif age == 21:
    print(True)
else:
    print(False)

while age < 30:
    if age == 25:
        print("HA-HA")
    age += 1


// Structs
struct Email:
    userName: String
    domain: String

    init(userName: String, domain: String):
        self.userName = userName
        self.domain = domain

    init():
        self.userName = "test"
        self.domain = "mail.com"


struct User:
    firstName: String
    lastName: String
    email: Email
    isAdmin: Bool = False

    fun makeAdmin():
        self.isAdmin = True


let basicEmail = Email()
print(basicEmail.userName)
print(basicEmail.domain)

let advancedEmail = Email("john", "mail.com")
print(advancedEmail.userName)
print(advancedEmail.domain)

var user = User("John", "Smith", advancedEmail)
print(user.email.userName)
print(user.isAdmin)
user.makeAdmin()
print(user.isAdmin)


struct Stack(A):
    data: [A]

    init(data: [A]):
        self.data = data

    fun push(element: A) -> A:
        self.data.append(element)
        return element

    fun depth -> U64:
        return self.data.length

let d = ["a": 1, "b": 2]
print(d.length)

let stack = Stack([1, 2, 3])
